version: '3.0'
services:
  db:
    image: postgres
    volumes:
      - ./postgres/data/db:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    privileged: false
    restart: always
    ports:
      - "5672:5672"
  consumer:
    build: consumer_django_project/.
    command: celery -A consumer_django_project worker -l info
    volumes:
      - ./consumer_django_project:/code
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq"
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      - db
    env_file:
      - .env
    deploy:
      mode: replicated
      replicas: 3 # number of consumer workers
  producer:
    build: producer_django_project/.
    command: sh run_server.sh
    volumes:
      - ./producer_django_project:/code
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq"
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      - db
    env_file:
      - .env